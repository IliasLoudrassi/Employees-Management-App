{"ast":null,"code":"var _jsxFileName = \"/Users/ilyassloudrassi/Desktop/Employees-Management-App/Employees-Management-App/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\nimport Main from \"./Components/Main/Main\";\nimport Body from \"./Components/Body/Body\";\nimport { generateEmployee } from \"./Data/dataGenerator\";\nimport Total from \"./Components/Total/Total\";\nimport Loading from \"./Components/Loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [listOfEmployees, setListOfEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState();\n  const [selectedWeek, setSelectedWeek] = useState(); // const [dayInputValue, setDayInputValue] = useState<string>();\n\n  const [totalWorkedHours, setTotalWorkedHours] = useState();\n  const [totalSalary, setTotalSalary] = useState();\n  const [currentWeekId, setCurrentWeekId] = useState();\n  const NUMBER_OF_USERS_TO_GENERATE = 20;\n  const NUMBER_OF_WEEKS_TO_GENERATE = 20;\n  useEffect(() => {\n    let tempListOfEmployess = [];\n\n    for (let i = 0; i < NUMBER_OF_USERS_TO_GENERATE; i++) {\n      tempListOfEmployess = [...tempListOfEmployess, generateEmployee(NUMBER_OF_WEEKS_TO_GENERATE)];\n    }\n\n    setListOfEmployees(tempListOfEmployess);\n  }, []);\n  useEffect(() => {\n    setSelectedEmployee(listOfEmployees[0]);\n  }, [listOfEmployees]);\n  useEffect(() => {\n    (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.timesheets) && setSelectedWeek(selectedEmployee.timesheets[0]);\n  }, [selectedEmployee]);\n  useEffect(() => {\n    selectedWeek && calculateTotal(selectedWeek);\n  }, [selectedWeek]);\n\n  const handleDateInputClick = weekId => {\n    var _selectedEmployee$tim;\n\n    setCurrentWeekId(weekId);\n    let weekFound = selectedEmployee === null || selectedEmployee === void 0 ? void 0 : (_selectedEmployee$tim = selectedEmployee.timesheets) === null || _selectedEmployee$tim === void 0 ? void 0 : _selectedEmployee$tim.find(week => week.timesheetId === weekId);\n    console.log(weekId);\n    setSelectedWeek(weekFound);\n  };\n\n  const handleNameInputClick = employeeId => {\n    let userFound = listOfEmployees.find(employee => employee.employeeId === employeeId);\n    setSelectedEmployee(userFound);\n  };\n\n  const handleDayInputChange = (dayId, value) => {\n    var _selectedEmployee$tim2;\n\n    let tempSelectedEmployee = selectedEmployee && (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : (_selectedEmployee$tim2 = selectedEmployee.timesheets) === null || _selectedEmployee$tim2 === void 0 ? void 0 : _selectedEmployee$tim2.find(week => week.timesheetId === currentWeekId));\n    console.log(tempSelectedEmployee); // let tempDay: DayOfWeek | undefined =\n    //   tempSelectedEmployee &&\n    //   tempSelectedEmployee.listOfDays.find((day) => day.dayId === dayId);\n    // // tempSelectedEmployee.listOfDays &&\n    // // tempSelectedEmployee.listOfDays.map((day) => day.dayId === dayId);\n    // console.log(tempDay);\n  }; // useEffect(() => {\n  //   console.log(\"useEffect\", dayInputValue);\n  // }, [dayInputValue]);\n\n\n  const calculateTotal = timesheet => {\n    let totalWorkedHours = 0;\n    let totalSalary = 0;\n    timesheet.listOfDays.forEach(element => {\n      totalWorkedHours += element.totalWorkedHours;\n      totalSalary += element.totalSalary;\n    });\n    setTotalWorkedHours(totalWorkedHours);\n    setTotalSalary(totalSalary);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), selectedEmployee && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Main, {\n        listOfEmployees: listOfEmployees,\n        selectedEmployee: selectedEmployee,\n        selectedWeek: selectedWeek,\n        handleNameInputClick: handleNameInputClick,\n        handleDateInputClick: handleDateInputClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Body // dayInputValue={dayInputValue}\n      , {\n        handleDayInputChange: handleDayInputChange,\n        selectedWeek: selectedWeek\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), totalWorkedHours && totalSalary && /*#__PURE__*/_jsxDEV(Total, {\n        totalWorkedHours: totalWorkedHours,\n        totalSalary: totalSalary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"/q+iqidGKLvqrJHYFTQ6cX/Gc80=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilyassloudrassi/Desktop/Employees-Management-App/Employees-Management-App/src/App.tsx"],"names":["React","useEffect","useState","GlobalStyle","Main","Body","generateEmployee","Total","Loading","App","listOfEmployees","setListOfEmployees","selectedEmployee","setSelectedEmployee","selectedWeek","setSelectedWeek","totalWorkedHours","setTotalWorkedHours","totalSalary","setTotalSalary","currentWeekId","setCurrentWeekId","NUMBER_OF_USERS_TO_GENERATE","NUMBER_OF_WEEKS_TO_GENERATE","tempListOfEmployess","i","timesheets","calculateTotal","handleDateInputClick","weekId","weekFound","find","week","timesheetId","console","log","handleNameInputClick","employeeId","userFound","employee","handleDayInputChange","dayId","value","tempSelectedEmployee","timesheet","listOfDays","forEach","element"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\nimport Main from \"./Components/Main/Main\";\nimport Body from \"./Components/Body/Body\";\nimport { DayOfWeek, Employee, Timesheet } from \"./Types/EmployeeType\";\nimport { generateEmployee } from \"./Data/dataGenerator\";\nimport Total from \"./Components/Total/Total\";\nimport Loading from \"./Components/Loading/Loading\";\n\nfunction App() {\n  const [listOfEmployees, setListOfEmployees] = useState<Employee[]>([]);\n  const [selectedEmployee, setSelectedEmployee] = useState<Employee>();\n  const [selectedWeek, setSelectedWeek] = useState<Timesheet>();\n  // const [dayInputValue, setDayInputValue] = useState<string>();\n  const [totalWorkedHours, setTotalWorkedHours] = useState<number>();\n  const [totalSalary, setTotalSalary] = useState<number>();\n  const [currentWeekId, setCurrentWeekId] = useState<string>();\n\n  const NUMBER_OF_USERS_TO_GENERATE = 20;\n  const NUMBER_OF_WEEKS_TO_GENERATE = 20;\n\n  useEffect(() => {\n    let tempListOfEmployess: Employee[] = [];\n    for (let i = 0; i < NUMBER_OF_USERS_TO_GENERATE; i++) {\n      tempListOfEmployess = [\n        ...tempListOfEmployess,\n        generateEmployee(NUMBER_OF_WEEKS_TO_GENERATE),\n      ];\n    }\n    setListOfEmployees(tempListOfEmployess);\n  }, []);\n\n  useEffect(() => {\n    setSelectedEmployee(listOfEmployees[0]);\n  }, [listOfEmployees]);\n\n  useEffect(() => {\n    selectedEmployee?.timesheets &&\n      setSelectedWeek(selectedEmployee.timesheets[0]);\n  }, [selectedEmployee]);\n\n  useEffect(() => {\n    selectedWeek && calculateTotal(selectedWeek);\n  }, [selectedWeek]);\n\n  const handleDateInputClick = (weekId: string) => {\n    setCurrentWeekId(weekId);\n    let weekFound: Timesheet | undefined = selectedEmployee?.timesheets?.find(\n      (week) => week.timesheetId === weekId\n    );\n    console.log(weekId);\n    setSelectedWeek(weekFound);\n  };\n\n  const handleNameInputClick = (employeeId: string) => {\n    let userFound: Employee | undefined = listOfEmployees.find(\n      (employee) => employee.employeeId === employeeId\n    );\n    setSelectedEmployee(userFound);\n  };\n\n  const handleDayInputChange = (dayId, value) => {\n    let tempSelectedEmployee: Timesheet | undefined =\n      selectedEmployee &&\n      selectedEmployee?.timesheets?.find(\n        (week) => week.timesheetId === currentWeekId\n      );\n    console.log(tempSelectedEmployee);\n\n    // let tempDay: DayOfWeek | undefined =\n    //   tempSelectedEmployee &&\n    //   tempSelectedEmployee.listOfDays.find((day) => day.dayId === dayId);\n    // // tempSelectedEmployee.listOfDays &&\n    // // tempSelectedEmployee.listOfDays.map((day) => day.dayId === dayId);\n    // console.log(tempDay);\n  };\n\n  // useEffect(() => {\n  //   console.log(\"useEffect\", dayInputValue);\n  // }, [dayInputValue]);\n\n  const calculateTotal = (timesheet: Timesheet) => {\n    let totalWorkedHours = 0;\n    let totalSalary = 0;\n    timesheet.listOfDays.forEach((element) => {\n      totalWorkedHours += element.totalWorkedHours;\n      totalSalary += element.totalSalary;\n    });\n    setTotalWorkedHours(totalWorkedHours);\n    setTotalSalary(totalSalary);\n  };\n\n  return (\n    <div>\n      <GlobalStyle />\n      {selectedEmployee && (\n        <>\n          <Main\n            listOfEmployees={listOfEmployees}\n            selectedEmployee={selectedEmployee}\n            selectedWeek={selectedWeek}\n            handleNameInputClick={handleNameInputClick}\n            handleDateInputClick={handleDateInputClick}\n          />\n\n          <Body\n            // dayInputValue={dayInputValue}\n            handleDayInputChange={handleDayInputChange}\n            selectedWeek={selectedWeek}\n          />\n          {totalWorkedHours && totalSalary && (\n            <Total\n              totalWorkedHours={totalWorkedHours}\n              totalSalary={totalSalary}\n            />\n          )}\n          <Loading />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}