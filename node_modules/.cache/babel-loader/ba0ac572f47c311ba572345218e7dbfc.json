{"ast":null,"code":"var _jsxFileName = \"/Users/ilyassloudrassi/Desktop/Employees-Management-App/Employees-Management-App/src/Components/Body/Body.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DayInput from \"../DayInput/DayInput\";\nimport { StyledBodyContainer, StyledInputAndSalaryContainer, StyledSalaryText, StyledSalaryTextContainer } from \"./styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Body(_ref) {\n  _s();\n\n  let {\n    selectedWeek,\n    // dayInputValue,\n    handleDayInputChange\n  } = _ref;\n  const [dayInputValue, setDayInputValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(StyledBodyContainer, {\n      children: (selectedWeek === null || selectedWeek === void 0 ? void 0 : selectedWeek.listOfDays) && selectedWeek.listOfDays.map((day, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(StyledInputAndSalaryContainer, {\n          children: [/*#__PURE__*/_jsxDEV(DayInput, {\n            dayInputValue: dayInputValue,\n            placeholderValue: day.totalWorkedHours.toString(),\n            currentDay: day.dayName,\n            handleDayInputValue: e => setDayInputValue(e) // dayInputValue={dayInputValue}\n            ,\n            dayOfWeek: day,\n            handleDayInputChange: (id, value) => handleDayInputChange(id, value)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledSalaryTextContainer, {\n            children: /*#__PURE__*/_jsxDEV(StyledSalaryText, {\n              children: `€${day.totalSalary}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Body, \"66h64zRST/+RFMoMGKT5Vv5bWu0=\");\n\n_c = Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/ilyassloudrassi/Desktop/Employees-Management-App/Employees-Management-App/src/Components/Body/Body.tsx"],"names":["React","useState","DayInput","StyledBodyContainer","StyledInputAndSalaryContainer","StyledSalaryText","StyledSalaryTextContainer","Body","selectedWeek","handleDayInputChange","dayInputValue","setDayInputValue","listOfDays","map","day","index","totalWorkedHours","toString","dayName","e","id","value","totalSalary"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SACEC,mBADF,EAEEC,6BAFF,EAGEC,gBAHF,EAIEC,yBAJF,QAKO,UALP;;;AAaA,eAAe,SAASC,IAAT,OAIL;AAAA;;AAAA,MAJmB;AAC3BC,IAAAA,YAD2B;AAE3B;AACAC,IAAAA;AAH2B,GAInB;AACR,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAS,EAAT,CAAlD;AACA,sBACE;AAAA,2BACE,QAAC,mBAAD;AAAA,gBACG,CAAAO,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEI,UAAd,KACCJ,YAAY,CAACI,UAAb,CAAwBC,GAAxB,CAA4B,CAACC,GAAD,EAAMC,KAAN,kBAC1B;AAAA,+BACE,QAAC,6BAAD;AAAA,kCACE,QAAC,QAAD;AAEE,YAAA,aAAa,EAAEL,aAFjB;AAGE,YAAA,gBAAgB,EAAEI,GAAG,CAACE,gBAAJ,CAAqBC,QAArB,EAHpB;AAIE,YAAA,UAAU,EAAEH,GAAG,CAACI,OAJlB;AAKE,YAAA,mBAAmB,EAAGC,CAAD,IAAOR,gBAAgB,CAACQ,CAAD,CAL9C,CAME;AANF;AAOE,YAAA,SAAS,EAAEL,GAPb;AAQE,YAAA,oBAAoB,EAAE,CAACM,EAAD,EAAKC,KAAL,KACpBZ,oBAAoB,CAACW,EAAD,EAAKC,KAAL;AATxB,aACON,KADP;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,yBAAD;AAAA,mCACE,QAAC,gBAAD;AAAA,wBAAoB,IAAGD,GAAG,CAACQ,WAAY;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAlCuBf,I;;KAAAA,I","sourcesContent":["import React, { useState } from \"react\";\nimport { Timesheet } from \"../../Types/EmployeeType\";\nimport DayInput from \"../DayInput/DayInput\";\nimport {\n  StyledBodyContainer,\n  StyledInputAndSalaryContainer,\n  StyledSalaryText,\n  StyledSalaryTextContainer,\n} from \"./styled\";\n\ninterface Props {\n  handleDayInputChange: (id: string, value: string | undefined) => void;\n  // dayInputValue: string | undefined;\n  selectedWeek?: Timesheet;\n}\n\nexport default function Body({\n  selectedWeek,\n  // dayInputValue,\n  handleDayInputChange,\n}: Props) {\n  const [dayInputValue, setDayInputValue] = useState<string>(\"\");\n  return (\n    <div>\n      <StyledBodyContainer>\n        {selectedWeek?.listOfDays &&\n          selectedWeek.listOfDays.map((day, index) => (\n            <>\n              <StyledInputAndSalaryContainer>\n                <DayInput\n                  key={index}\n                  dayInputValue={dayInputValue}\n                  placeholderValue={day.totalWorkedHours.toString()}\n                  currentDay={day.dayName}\n                  handleDayInputValue={(e) => setDayInputValue(e)}\n                  // dayInputValue={dayInputValue}\n                  dayOfWeek={day}\n                  handleDayInputChange={(id, value) =>\n                    handleDayInputChange(id, value)\n                  }\n                />\n                <StyledSalaryTextContainer>\n                  <StyledSalaryText>{`€${day.totalSalary}`}</StyledSalaryText>\n                </StyledSalaryTextContainer>\n              </StyledInputAndSalaryContainer>\n            </>\n          ))}\n      </StyledBodyContainer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}