{"ast":null,"code":"var _jsxFileName = \"/Users/ilyassloudrassi/Desktop/Employees-Management-App/Employees-Management-App/src/Components/FilterInput/FilterInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport user from \"../../assets/SVGs/user.svg\";\nimport { getDateFormatFromTimesheet } from \"../../Data/utils\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport { StyledInputContainer, StyledInputDisplayedText, StyledUserImage } from \"./styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FilterInput(_ref) {\n  _s();\n\n  let {\n    filterName,\n    dropdownData,\n    selectedEmployee,\n    selectedWeek,\n    isNameDropdown,\n    isDateDropdown,\n    handleNameInputClick,\n    handleDateInputClick\n  } = _ref;\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const doropdownRef = useRef();\n  useEffect(() => {\n    const checkIfClickedOutside = e => {\n      if (isDropdownOpen && doropdownRef.current && !doropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"click\", checkIfClickedOutside);\n  }, [isDropdownOpen]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StyledInputContainer, {\n      isOpen: isDropdownOpen,\n      inputName: filterName,\n      onClick: () => {\n        setIsDropdownOpen(!isDropdownOpen);\n      },\n      ref: doropdownRef,\n      children: [/*#__PURE__*/_jsxDEV(StyledUserImage, {\n        src: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInputDisplayedText, {\n        children: [isNameDropdown && `${selectedEmployee.employeeName} ${selectedEmployee.employeeLastName}`, isDateDropdown && selectedWeek && getDateFormatFromTimesheet(selectedWeek)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      isNameDropdown: isNameDropdown,\n      isDateDropdown: isDateDropdown,\n      dropdownData: dropdownData,\n      isDropdownOpen: isDropdownOpen,\n      selectedEmployee: selectedEmployee,\n      selectedWeek: selectedWeek,\n      handleNameInputClick: employeeId => {\n        handleNameInputClick && handleNameInputClick(employeeId);\n        setIsDropdownOpen(false);\n      },\n      handleDateInputClick: weekId => {\n        handleDateInputClick && handleDateInputClick(weekId);\n        setIsDropdownOpen(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterInput, \"UOa4uvVJbYPFaqw9dx9gfBVug3s=\");\n\n_c = FilterInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterInput\");","map":{"version":3,"sources":["/Users/ilyassloudrassi/Desktop/Employees-Management-App/Employees-Management-App/src/Components/FilterInput/FilterInput.tsx"],"names":["React","useEffect","useRef","useState","user","getDateFormatFromTimesheet","Dropdown","StyledInputContainer","StyledInputDisplayedText","StyledUserImage","FilterInput","filterName","dropdownData","selectedEmployee","selectedWeek","isNameDropdown","isDateDropdown","handleNameInputClick","handleDateInputClick","isDropdownOpen","setIsDropdownOpen","doropdownRef","checkIfClickedOutside","e","current","contains","target","document","addEventListener","employeeName","employeeLastName","employeeId","weekId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SACEC,oBADF,EAEEC,wBAFF,EAGEC,eAHF,QAIO,UAJP;;AAiBA,eAAe,SAASC,WAAT,OASL;AAAA;;AAAA,MAT0B;AAClCC,IAAAA,UADkC;AAElCC,IAAAA,YAFkC;AAGlCC,IAAAA,gBAHkC;AAIlCC,IAAAA,YAJkC;AAKlCC,IAAAA,cALkC;AAMlCC,IAAAA,cANkC;AAOlCC,IAAAA,oBAPkC;AAQlCC,IAAAA;AARkC,GAS1B;AACR,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAAC,KAAD,CAApD;AACA,QAAMkB,YAAY,GAAGnB,MAAM,EAA3B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,qBAAqB,GAAIC,CAAD,IAAO;AACnC,UACEJ,cAAc,IACdE,YAAY,CAACG,OADb,IAEA,CAACH,YAAY,CAACG,OAAb,CAAqBC,QAArB,CAA8BF,CAAC,CAACG,MAAhC,CAHH,EAIE;AACAN,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,KARD;;AAUAO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,qBAAnC;AACD,GAZQ,EAYN,CAACH,cAAD,CAZM,CAAT;AAcA,sBACE;AAAA,4BACE,QAAC,oBAAD;AACE,MAAA,MAAM,EAAEA,cADV;AAEE,MAAA,SAAS,EAAER,UAFb;AAGE,MAAA,OAAO,EAAE,MAAM;AACbS,QAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD,OALH;AAME,MAAA,GAAG,EAAEE,YANP;AAAA,8BAQE,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAEjB;AAAtB;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,wBAAD;AAAA,mBACGW,cAAc,IACZ,GAAEF,gBAAgB,CAACgB,YAAa,IAAGhB,gBAAgB,CAACiB,gBAAiB,EAF1E,EAGGd,cAAc,IACbF,YADD,IAECT,0BAA0B,CAACS,YAAD,CAL9B;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,QAAD;AACE,MAAA,cAAc,EAAEC,cADlB;AAEE,MAAA,cAAc,EAAEC,cAFlB;AAGE,MAAA,YAAY,EAAEJ,YAHhB;AAIE,MAAA,cAAc,EAAEO,cAJlB;AAKE,MAAA,gBAAgB,EAAEN,gBALpB;AAME,MAAA,YAAY,EAAEC,YANhB;AAOE,MAAA,oBAAoB,EAAGiB,UAAD,IAAgB;AACpCd,QAAAA,oBAAoB,IAAIA,oBAAoB,CAACc,UAAD,CAA5C;AACAX,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,OAVH;AAWE,MAAA,oBAAoB,EAAGY,MAAD,IAAY;AAChCd,QAAAA,oBAAoB,IAAIA,oBAAoB,CAACc,MAAD,CAA5C;AACAZ,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AAdH;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAhEuBV,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport user from \"../../assets/SVGs/user.svg\";\nimport { getDateFormatFromTimesheet } from \"../../Data/utils\";\nimport { Employee, Timesheet } from \"../../Types/EmployeeType\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport {\n  StyledInputContainer,\n  StyledInputDisplayedText,\n  StyledUserImage,\n} from \"./styled\";\n\ninterface Props {\n  filterName: string;\n  dropdownData: Employee[];\n  selectedEmployee: Employee;\n  selectedWeek?: Timesheet;\n  isNameDropdown?: boolean;\n  isDateDropdown?: boolean;\n  handleNameInputClick?: (id: string) => void;\n  handleDateInputClick?: (id: string) => void;\n}\n\nexport default function FilterInput({\n  filterName,\n  dropdownData,\n  selectedEmployee,\n  selectedWeek,\n  isNameDropdown,\n  isDateDropdown,\n  handleNameInputClick,\n  handleDateInputClick,\n}: Props) {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const doropdownRef = useRef<HTMLDivElement>();\n\n  useEffect(() => {\n    const checkIfClickedOutside = (e) => {\n      if (\n        isDropdownOpen &&\n        doropdownRef.current &&\n        !doropdownRef.current.contains(e.target)\n      ) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener(\"click\", checkIfClickedOutside);\n  }, [isDropdownOpen]);\n\n  return (\n    <div>\n      <StyledInputContainer\n        isOpen={isDropdownOpen}\n        inputName={filterName}\n        onClick={() => {\n          setIsDropdownOpen(!isDropdownOpen);\n        }}\n        ref={doropdownRef}\n      >\n        <StyledUserImage src={user} />\n        <StyledInputDisplayedText>\n          {isNameDropdown &&\n            `${selectedEmployee.employeeName} ${selectedEmployee.employeeLastName}`}\n          {isDateDropdown &&\n            selectedWeek &&\n            getDateFormatFromTimesheet(selectedWeek)}\n        </StyledInputDisplayedText>\n      </StyledInputContainer>\n      <Dropdown\n        isNameDropdown={isNameDropdown}\n        isDateDropdown={isDateDropdown}\n        dropdownData={dropdownData}\n        isDropdownOpen={isDropdownOpen}\n        selectedEmployee={selectedEmployee}\n        selectedWeek={selectedWeek}\n        handleNameInputClick={(employeeId) => {\n          handleNameInputClick && handleNameInputClick(employeeId);\n          setIsDropdownOpen(false);\n        }}\n        handleDateInputClick={(weekId) => {\n          handleDateInputClick && handleDateInputClick(weekId);\n          setIsDropdownOpen(false);\n        }}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}