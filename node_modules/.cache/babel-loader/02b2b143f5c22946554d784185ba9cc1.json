{"ast":null,"code":"var _jsxFileName = \"/Users/ilyassloudrassi/Desktop/Employees-Management-App/Employees-Management-App/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\nimport Body from \"./Components/Body/Body\";\nimport { generateEmployee } from \"./Data/dataGenerator\";\nimport Total from \"./Components/Total/Total\";\nimport Loading from \"./Components/Loading/Loading\";\nimport Header from \"./Components/Header/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [listOfEmployees, setListOfEmployees] = useState([]);\n  const [selectedEmployee, setSelectedEmployee] = useState();\n  const [selectedWeek, setSelectedWeek] = useState();\n  const [totalWorkedHours, setTotalWorkedHours] = useState();\n  const [totalSalary, setTotalSalary] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const NUMBER_OF_USERS_TO_GENERATE = 20;\n  const NUMBER_OF_WEEKS_TO_GENERATE = 20;\n  useEffect(() => {\n    let tempListOfEmployess = [];\n\n    for (let i = 0; i < NUMBER_OF_USERS_TO_GENERATE; i++) {\n      tempListOfEmployess = [...tempListOfEmployess, generateEmployee(NUMBER_OF_WEEKS_TO_GENERATE)];\n    }\n\n    setListOfEmployees(tempListOfEmployess);\n  }, []);\n  useEffect(() => {\n    setSelectedEmployee(listOfEmployees[0]);\n  }, [listOfEmployees]);\n  useEffect(() => {\n    (selectedEmployee === null || selectedEmployee === void 0 ? void 0 : selectedEmployee.timesheets) && setSelectedWeek(selectedEmployee.timesheets[0]);\n  }, [selectedEmployee]);\n  useEffect(() => {\n    selectedWeek && calculateTotal(selectedWeek);\n  }, [selectedWeek]);\n  useEffect(() => {\n    selectedWeek && calculateTotal(selectedWeek);\n  }, [totalWorkedHours, selectedWeek]);\n\n  const handleNameInputClick = employeeId => {\n    let userFound = listOfEmployees.find(employee => employee.employeeId === employeeId);\n    setSelectedEmployee(userFound);\n  };\n\n  const handleDateInputClick = weekId => {\n    var _selectedEmployee$tim;\n\n    let weekFound = selectedEmployee === null || selectedEmployee === void 0 ? void 0 : (_selectedEmployee$tim = selectedEmployee.timesheets) === null || _selectedEmployee$tim === void 0 ? void 0 : _selectedEmployee$tim.find(week => week.timesheetId === weekId);\n    setSelectedWeek(weekFound);\n  };\n\n  const handleDayInputChange = (dayId, value, e) => {\n    var _tempSelectedEmployee;\n\n    setIsLoading(true);\n    let tempSelectedEmployee = selectedEmployee && { ...selectedEmployee\n    };\n    let tempWeek = tempSelectedEmployee === null || tempSelectedEmployee === void 0 ? void 0 : (_tempSelectedEmployee = tempSelectedEmployee.timesheets) === null || _tempSelectedEmployee === void 0 ? void 0 : _tempSelectedEmployee.find(week => week.timesheetId === (selectedWeek === null || selectedWeek === void 0 ? void 0 : selectedWeek.timesheetId));\n    let tempDay = tempWeek && tempWeek.listOfDays.find(day => day.dayId === dayId);\n    setTimeout(() => {\n      if (tempDay && value) {\n        tempDay.totalWorkedHours = parseInt(value);\n        setTotalWorkedHours(tempDay.totalWorkedHours);\n        setIsLoading(false);\n      }\n    }, 2000);\n  };\n\n  const calculateTotal = timesheet => {\n    let totalWorkedHours = 0;\n    let totalSalary = 0;\n    timesheet.listOfDays.forEach(element => {\n      totalWorkedHours += element.totalWorkedHours;\n      totalSalary += element.totalSalary;\n    });\n    setTotalWorkedHours(totalWorkedHours);\n    setTotalSalary(totalSalary);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), selectedEmployee && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        listOfEmployees: listOfEmployees,\n        selectedEmployee: selectedEmployee,\n        selectedWeek: selectedWeek,\n        handleNameInputClick: handleNameInputClick,\n        handleDateInputClick: handleDateInputClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Body // dayInputValue={dayInputValue}\n        , {\n          handleDayInputChange: handleDayInputChange,\n          selectedWeek: selectedWeek\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), totalWorkedHours && totalSalary && /*#__PURE__*/_jsxDEV(Total, {\n          totalWorkedHours: totalWorkedHours,\n          totalSalary: totalSalary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"b3z9f4gPORyS/VU13BUva+qrWKw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ilyassloudrassi/Desktop/Employees-Management-App/Employees-Management-App/src/App.tsx"],"names":["React","useEffect","useState","GlobalStyle","Body","generateEmployee","Total","Loading","Header","App","listOfEmployees","setListOfEmployees","selectedEmployee","setSelectedEmployee","selectedWeek","setSelectedWeek","totalWorkedHours","setTotalWorkedHours","totalSalary","setTotalSalary","isLoading","setIsLoading","NUMBER_OF_USERS_TO_GENERATE","NUMBER_OF_WEEKS_TO_GENERATE","tempListOfEmployess","i","timesheets","calculateTotal","handleNameInputClick","employeeId","userFound","find","employee","handleDateInputClick","weekId","weekFound","week","timesheetId","handleDayInputChange","dayId","value","e","tempSelectedEmployee","tempWeek","tempDay","listOfDays","day","setTimeout","parseInt","timesheet","forEach","element"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { GlobalStyle } from \"./styles/GlobalStyles\";\nimport Body from \"./Components/Body/Body\";\nimport { DayOfWeek, Employee, Timesheet } from \"./Types/EmployeeType\";\nimport { generateEmployee } from \"./Data/dataGenerator\";\nimport Total from \"./Components/Total/Total\";\nimport Loading from \"./Components/Loading/Loading\";\nimport Header from \"./Components/Header/Header\";\n\nfunction App() {\n  const [listOfEmployees, setListOfEmployees] = useState<Employee[]>([]);\n  const [selectedEmployee, setSelectedEmployee] = useState<Employee>();\n  const [selectedWeek, setSelectedWeek] = useState<Timesheet>();\n  const [totalWorkedHours, setTotalWorkedHours] = useState<number>();\n  const [totalSalary, setTotalSalary] = useState<number>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const NUMBER_OF_USERS_TO_GENERATE = 20;\n  const NUMBER_OF_WEEKS_TO_GENERATE = 20;\n\n  useEffect(() => {\n    let tempListOfEmployess: Employee[] = [];\n    for (let i = 0; i < NUMBER_OF_USERS_TO_GENERATE; i++) {\n      tempListOfEmployess = [\n        ...tempListOfEmployess,\n        generateEmployee(NUMBER_OF_WEEKS_TO_GENERATE),\n      ];\n    }\n    setListOfEmployees(tempListOfEmployess);\n  }, []);\n\n  useEffect(() => {\n    setSelectedEmployee(listOfEmployees[0]);\n  }, [listOfEmployees]);\n\n  useEffect(() => {\n    selectedEmployee?.timesheets &&\n      setSelectedWeek(selectedEmployee.timesheets[0]);\n  }, [selectedEmployee]);\n\n  useEffect(() => {\n    selectedWeek && calculateTotal(selectedWeek);\n  }, [selectedWeek]);\n\n  useEffect(() => {\n    selectedWeek && calculateTotal(selectedWeek);\n  }, [totalWorkedHours, selectedWeek]);\n\n  const handleNameInputClick = (employeeId: string) => {\n    let userFound: Employee | undefined = listOfEmployees.find(\n      (employee) => employee.employeeId === employeeId\n    );\n    setSelectedEmployee(userFound);\n  };\n\n  const handleDateInputClick = (weekId: string) => {\n    let weekFound: Timesheet | undefined = selectedEmployee?.timesheets?.find(\n      (week) => week.timesheetId === weekId\n    );\n    setSelectedWeek(weekFound);\n  };\n\n  const handleDayInputChange = (dayId, value: string, e) => {\n    setIsLoading(true);\n    let tempSelectedEmployee: Employee | undefined = selectedEmployee && {\n      ...selectedEmployee,\n    };\n    let tempWeek: Timesheet | undefined =\n      tempSelectedEmployee?.timesheets?.find(\n        (week) => week.timesheetId === selectedWeek?.timesheetId\n      );\n\n    let tempDay: DayOfWeek | undefined =\n      tempWeek && tempWeek.listOfDays.find((day) => day.dayId === dayId);\n\n    setTimeout(() => {\n      if (tempDay && value) {\n        tempDay.totalWorkedHours = parseInt(value);\n        setTotalWorkedHours(tempDay.totalWorkedHours);\n        setIsLoading(false);\n      }\n    }, 2000);\n  };\n\n  const calculateTotal = (timesheet: Timesheet) => {\n    let totalWorkedHours = 0;\n    let totalSalary = 0;\n    timesheet.listOfDays.forEach((element) => {\n      totalWorkedHours += element.totalWorkedHours;\n      totalSalary += element.totalSalary;\n    });\n    setTotalWorkedHours(totalWorkedHours);\n    setTotalSalary(totalSalary);\n  };\n\n  return (\n    <div>\n      <GlobalStyle />\n      {selectedEmployee && (\n        <>\n          <Header\n            listOfEmployees={listOfEmployees}\n            selectedEmployee={selectedEmployee}\n            selectedWeek={selectedWeek}\n            handleNameInputClick={handleNameInputClick}\n            handleDateInputClick={handleDateInputClick}\n          />\n          {isLoading ? (\n            <Loading />\n          ) : (\n            <>\n              <Body\n                // dayInputValue={dayInputValue}\n                handleDayInputChange={handleDayInputChange}\n                selectedWeek={selectedWeek}\n              />\n              {totalWorkedHours && totalSalary && (\n                <Total\n                  totalWorkedHours={totalWorkedHours}\n                  totalSalary={totalSalary}\n                />\n              )}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}